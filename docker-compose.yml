version: "3.2"

services:
  mysql:
    container_name: mysql
    image: mysql:8.0.21
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - "$PWD/mysql/data:/var/lib/mysql"
      - "$PWD/mysql/conf:/etc/mysql/conf.d/"
      - "$PWD/mysql/logs:/logs"
    ports:
      - "3306:3306"
    restart: always

  nacos1:
    hostname: nacos1
    container_name: nacos1
    image: nacos/nacos-server:latest
    environment:
      MODE: standalone
    ports:
      - "8848:8848"
    restart: always
    depends_on:
      - mysql

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - "$PWD/nginx/conf/nginx.conf:/etc/nginx/nginx.conf"
      - "$PWD/nginx/conf/conf.d:/etc/nginx/conf.d"
      - "$PWD/nginx/html:/usr/share/nginx/html"
      - "$PWD/nginx/logs:/var/log/nginx"
    ports:
      - "80:80"
    restart: always
    depends_on:
      - nacos1

  gateway:
    build: ./gateway
    ports:
      - "10000:10000"
    depends_on:
      - nacos1
  icc-menber:
    build: ./icc-menber
    depends_on:
      - nacos1
      - nginx
  icc-product:
    build: ./icc-product
    depends_on:
      - nacos1
      - nginx
  icc-order:
    build: ./icc-order
    depends_on:
      - nacos1
      - nginx
  icc-ware:
    build: ./icc-ware
    depends_on:
      - nacos1
      - nginx
  icc-coupon:
    build: ./icc-coupon
    depends_on:
      - nacos1
      - nginx

  es1:
    image: elasticsearch:7.12.1
    container_name: es1
    environment:
      - node.name=es1
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es2
      - cluster.initial_master_nodes=es1
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - "$PWD/elasticsearch/data/1:/usr/share/elasticsearch/data"
      - "$PWD/elasticsearch/plugins:/usr/share/elasticsearch/plugins"
      - "$PWD/elasticsearch/config/1/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
    ports:
      - 9200:9200
    networks:
      - elastic

  es2:
    image: elasticsearch:7.12.1
    container_name: es2
    environment:
      - node.name=es2
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es1
      - cluster.initial_master_nodes=es1,es2
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - "$PWD/elasticsearch/data/2:/usr/share/elasticsearch/data"
      - "$PWD/elasticsearch/plugins:/usr/share/elasticsearch/plugins"
    networks:
      - elastic

  redis-master:
    image: redis
    container_name: redis-master
    restart: always
    volumes:
      - "$PWD/redis/master/data:/data"
      - "$PWD/redis/master/conf/redis.conf:/etc/redis/redis.conf"
    command: redis-server /etc/redis/redis.conf --requirepass 123456 --masterauth 123456
    network_mode: "host"

  redis-slave-1:
    image: redis
    container_name: redis-slave-1
    restart: always
    volumes:
      - "$PWD/redis/slave1/data:/data"
      - "$PWD/redis/slave1/conf/redis.conf:/etc/redis/redis.conf"
    command: redis-server /etc/redis/redis.conf --slaveof 192.168.145.101 6379 --requirepass 123456 --masterauth 123456
    network_mode: "host"
    depends_on:
      - redis-master

  redis-slave-2:
    image: redis
    container_name: redis-slave-2
    restart: always
    volumes:
      - "$PWD/redis/slave2/data:/data"
      - "$PWD/redis/slave2/conf/redis.conf:/etc/redis/redis.conf"
    command: redis-server /etc/redis/redis.conf --slaveof 192.168.145.101 6379 --requirepass 123456 --masterauth 123456
    network_mode: "host"
    depends_on:
      - redis-master

  sentinel1:
    image: redis
    container_name: redis-sentinel-1
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - "$PWD/redis/master/conf/sentinel.conf:/usr/local/etc/redis/sentinel.conf"
    network_mode: "host"
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2

  sentinel2:
    image: redis
    container_name: redis-sentinel-2
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - "$PWD/redis/slave1/conf/sentinel.conf:/usr/local/etc/redis/sentinel.conf"
    network_mode: "host"
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2

  sentinel3:
    image: redis
    container_name: redis-sentinel-3
    command: redis-sentinel /usr/local/etc/redis/sentinel.conf
    volumes:
      - "$PWD/redis/slave2/conf/sentinel.conf:/usr/local/etc/redis/sentinel.conf"
    network_mode: "host"
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2

networks:
  elastic:
    driver: bridge


